name: Deploy Multi-Region EKS with Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # necesario para OIDC
      contents: read

    env:
      PRIMARY_REGION: us-east-1
      SECONDARY_REGION: us-west-2
      TF_WORKING_DIR: .  # asumiendo que tu Terraform está en la raíz
      CLUSTER_NAME: acme-eks

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::351247743848:role/GitHubOIDCRole
          aws-region: ${{ env.PRIMARY_REGION }}

      - name: Debug AWS Identity
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Terraform Init
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} init -input=false

      - name: Terraform Plan
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} plan -input=false

      - name: Terraform Apply
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve

  deploy_k8s:
    runs-on: ubuntu-latest
    needs: terraform
    permissions:
      id-token: write
      contents: read

    env:
      PRIMARY_REGION: us-east-1
      SECONDARY_REGION: us-west-2
      CLUSTER_PRIMARY: acme-eks-primary
      CLUSTER_SECONDARY: acme-eks-secondary

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::351247743848:role/GitHubOIDCRole
          aws-region: ${{ env.PRIMARY_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for primary
        run: |
          aws eks update-kubeconfig --region $PRIMARY_REGION --name $CLUSTER_PRIMARY
          kubectl apply -f terraform/nginx-deployment.yaml
          kubectl get pods -n default -o wide

      - name: Update kubeconfig for secondary
        run: |
          aws eks update-kubeconfig --region $SECONDARY_REGION --name $CLUSTER_SECONDARY
          kubectl apply -f terraform/nginx-deployment.yaml
          kubectl get pods -n default -o wide
